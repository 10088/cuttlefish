%% example of super basic mapping
%% @doc Default ring creation size.  Make sure it is a power of 2,
%% e.g. 16, 32, 64, 128, 256, 512 etc
%% @datatype integer
%% @mapping riak_core.ring_creation_size
{ "ring_size", "64" }.

%% Slightly more complex mapping with translation layer
%% @doc enable active anti-entropy subsystem
%% @datatype enum on, off, debug
%% @mapping riak_kv.anti_entropy
{ "anti_entropy", "on" }.

%% @translation
{ "riak_kv.anti_entropy",
  fun(Conf) ->
  	Setting = proplists:get_value("anti_entropy", Conf), 
  	case Setting of
  		on -> {on, []};
  		debug -> {on, [debug]};
  		off -> {off, []};
  		_Default -> {on, []}
  	end
  end
}.

%% complex lager example
%% @doc location of the console log
%% @mapping lager.handlers
{ "log.console.file", "./log/console.log"}.

%% *gasp* notice the same @mapping!
%% @doc location of the error log
%% @mapping lager.handlers
{ "log.error.file", "./log/error.log"}.

%% *gasp* notice the same @mapping!
%% @doc turn on syslog
%% @datatype enum on, off
%% @mapping lager.handlers
{ "log.syslog", "off"}.

%% @translation
{ "lager.handlers",
	fun(Conf) ->
		SyslogHandler = case proplists:get_value("log.syslog", Conf) of
			on ->  {lager_syslog_backend, ["riak", daemon, info]};
			_ -> undefined
		end,
		ErrorHandler = case proplists:get_value("log.error.file", Conf) of
			undefined -> undefined;
			ErrorFilename -> {lager_file_backend, [{file, ErrorFilename}, {level, error}]}
		end,
        ConsoleHandler = case proplists:get_value("log.console.file", Conf) of
        	undefined -> undefined;
        	ConsoleFilename -> {lager_file_backend, [{file, ConsoleFilename}, {level, info}]}
        end,
        lists:filter(fun(X) -> X =/= undefined end, [SyslogHandler, ErrorHandler, ConsoleHandler]) 
	end
}.

%% SASL 
%% We should never care about this
%% @datatype enum on, off
%% @mapping sasl.sasl_error_logger
%% @advanced
{"sasl", "off"}.

%% @translation
{"sasl.sasl_error_logger",
  fun(Conf) ->
    case proplists:get_value("sasl", Conf) of %%how to pull default?
        on -> true;
        _ -> false
    end
  end
}.

%% HTTP Listeners
%% @doc listener.http.<name> is an IP address and TCP port that the Riak
%% HTTP interface will bind.
%% @datatype ip
%% @mapping riak_core.http
%% @include_default internal
{"listener.http.$name", "127.0.0.1:8098"}.

%% @translation
{"riak_core.http",
    fun(Conf) ->
        HTTP = bjorn_util:key_starts_with("listener.http.", Conf),
        [ IP || {_, IP} <- HTTP]
    end
}.

%% protobuf Listeners
%% @doc listener.protobuf.<name> is an IP address and TCP port that the Riak 
%% Protocol Buffers interface will bind.
%% @datatype ip
%% @mapping riak_api.pb
%% @include_default internal
{"listener.protobuf.$name", "127.0.0.1:8087"}.

%% @translation
{"riak_api.pb",
    fun(Conf) ->
        PB = bjorn_util:key_starts_with("listener.protobuf.", Conf),
        [ IP || {_, IP} <- PB]
    end
}.

%% @doc pb_backlog is the maximum length to which the queue of pending
%% connections may grow. If set, it must be an integer >= 0.
%% By default the value is 5. If you anticipate a huge number of
%% connections being initialised *simultaneously*, set this number
%% higher.
%% @mapping riak_api.pb_backlog
%% @datatype integer
%% @commented 64
{"protobuf.backlog", undefined}.

%% @doc Default location of ringstate
%% @mapping riak_core.ring_state_dir
{"ring.state_dir", "./data/ring"}.

%% @doc listener.https.<name> is an IP address and TCP port that the Riak
%% HTTPS interface will bind.
%% @datatype ip
%% @mapping riak_core.https
%% @include_default internal
%% @commented 127.0.0.1:8098
{"listener.https.$name", undefined}.

%% @translation
{"riak_core.https",
    fun(Conf) ->
        HTTPS = bjorn_util:key_starts_with("listener.https.", Conf),
        [ IP || {_, IP} <- HTTPS]
    end
}.

%% @doc Default cert location for https can be overridden
%% with the ssl config variable, for example:
%% @mapping riak_core.ssl.certfile
%% @commented ./etc/cert.pem
{"ssl.certfile", undefined}.

%% @doc Default key location for https can be overridden
%% with the ssl config variable, for example:
%% @mapping riak_core.ssl.keyfile
%% @commented ./etc/key.pem
{"ssl.keyfile", undefined}.
